{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport MainWindow from './components/MainWindow';\nimport RightBox from './components/RightBox';\nimport CalculateOptions from './components/CalculateOptions';\nimport CalculateUniqueOptions from './components/CalculateUniqueOptions';\nimport IsSolutionCorrect from './components/IsSolutionCorrect';\nimport BruteSolver from './components/BruteSolver';\nimport { grid_templates } from './common/grid_templates';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.newGrid = _this.newGrid.bind(_assertThisInitialized(_this));\n    _this.updateGrid = _this.updateGrid.bind(_assertThisInitialized(_this));\n    _this.calcOptions = _this.calcOptions.bind(_assertThisInitialized(_this));\n    _this.calcUniqueOptions = _this.calcUniqueOptions.bind(_assertThisInitialized(_this));\n    _this.checkSolution = _this.checkSolution.bind(_assertThisInitialized(_this));\n    _this.bruteSolve = _this.bruteSolve.bind(_assertThisInitialized(_this));\n    _this.bruteSolver = new BruteSolver();\n    _this.isSolutionCorrect = new IsSolutionCorrect(); //get initial state\n\n    _this.state = {\n      grid: grid_templates.grid_empty,\n      gridOptions: [],\n      uniqueOptions: [],\n      solved: null\n    };\n    return _this;\n  } // clones 81 len array from grid_templates file\n\n\n  _createClass(App, [{\n    key: \"newGrid\",\n    value: function newGrid() {\n      var grid_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'grid_empty';\n\n      var grid = _toConsumableArray(grid_templates[grid_id]);\n\n      var solved;\n      this.setState({\n        grid: grid\n      });\n      this.setState({\n        solved: solved\n      });\n    }\n  }, {\n    key: \"updateGrid\",\n    value: function updateGrid(vert, horiz, value) {\n      var grid = _toConsumableArray(this.state.grid);\n\n      if (value === \"\") grid[vert * 9 + horiz] = value;else grid[vert * 9 + horiz] = 1 * value;\n      var solved;\n      this.setState({\n        grid: grid\n      });\n      this.setState({\n        solved: solved\n      });\n    }\n  }, {\n    key: \"calcOptions\",\n    value: function calcOptions() {\n      var gridOptions = CalculateOptions(this.state.grid);\n      this.setState({\n        gridOptions: gridOptions\n      });\n      console.table(gridOptions);\n    }\n  }, {\n    key: \"calcUniqueOptions\",\n    value: function calcUniqueOptions() {\n      var gridOptions = CalculateOptions(this.state.grid);\n      var uniqueOptions = CalculateUniqueOptions(gridOptions);\n      this.setState({\n        uniqueOptions: uniqueOptions\n      });\n      console.table(uniqueOptions);\n    }\n  }, {\n    key: \"bruteSolve\",\n    value: function bruteSolve() {\n      var _this$bruteSolver$sol = this.bruteSolver.solve(this.state.grid),\n          grid = _this$bruteSolver$sol.grid;\n\n      this.setState({\n        grid: grid\n      });\n    }\n  }, {\n    key: \"checkSolution\",\n    value: function checkSolution() {\n      var solved = false;\n\n      if (this.isSolutionCorrect.checkGrid(this.state.grid)) {\n        console.log(\"Solución correcta!\");\n        solved = true;\n      } else {\n        console.log(\"Esta no es la solución correcta!\");\n      }\n\n      this.setState({\n        solved: solved\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MainWindow, {\n        grid: this.state.grid,\n        solved: this.state.solved,\n        updateGrid: this.updateGrid,\n        newGrid: this.newGrid,\n        bruteSolve: this.bruteSolve,\n        checkSolution: this.checkSolution,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/alons/OneDrive/Documentos/Todos los proyectos descargados/react-sudoku-master/src/App.js"],"names":["React","Component","Header","MainWindow","RightBox","CalculateOptions","CalculateUniqueOptions","IsSolutionCorrect","BruteSolver","grid_templates","App","newGrid","bind","updateGrid","calcOptions","calcUniqueOptions","checkSolution","bruteSolve","bruteSolver","isSolutionCorrect","state","grid","grid_empty","gridOptions","uniqueOptions","solved","grid_id","setState","vert","horiz","value","console","table","solve","checkGrid","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport MainWindow from './components/MainWindow';\r\nimport RightBox from './components/RightBox';\r\nimport CalculateOptions from './components/CalculateOptions';\r\nimport CalculateUniqueOptions from './components/CalculateUniqueOptions';\r\nimport IsSolutionCorrect from './components/IsSolutionCorrect';\r\nimport BruteSolver from './components/BruteSolver';\r\nimport { grid_templates } from './common/grid_templates';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.newGrid = this.newGrid.bind(this);\r\n    this.updateGrid = this.updateGrid.bind(this);\r\n    this.calcOptions = this.calcOptions.bind(this);\r\n    this.calcUniqueOptions = this.calcUniqueOptions.bind(this);\r\n    this.checkSolution = this.checkSolution.bind(this);\r\n    this.bruteSolve = this.bruteSolve.bind(this);\r\n\r\n    this.bruteSolver = new BruteSolver();\r\n    this.isSolutionCorrect = new IsSolutionCorrect();\r\n    //get initial state\r\n    this.state = {\r\n      grid: grid_templates.grid_empty,\r\n      gridOptions: [],\r\n      uniqueOptions: [],\r\n      solved: null\r\n    };\r\n  }\r\n\r\n  // clones 81 len array from grid_templates file\r\n  newGrid(grid_id = 'grid_empty') {\r\n    \r\n    const grid = [...grid_templates[grid_id]];\r\n\r\n    let solved;\r\n\r\n    this.setState({ grid });\r\n    this.setState({ solved });\r\n  }\r\n\r\n  updateGrid(vert, horiz, value) {\r\n    const grid = [...this.state.grid];\r\n    if (value === \"\") grid[vert*9 + horiz] = value;\r\n    else grid[vert*9 + horiz] = 1 * value;\r\n\r\n    let solved;\r\n\r\n    this.setState({ grid });\r\n    this.setState({ solved });\r\n  }\r\n\r\n  calcOptions() {\r\n    const gridOptions = CalculateOptions(this.state.grid);\r\n    this.setState({ gridOptions });\r\n    console.table(gridOptions);\r\n  }\r\n\r\n  calcUniqueOptions() {\r\n    const gridOptions = CalculateOptions(this.state.grid);\r\n    const uniqueOptions = CalculateUniqueOptions(gridOptions);\r\n    this.setState({ uniqueOptions });\r\n    console.table(uniqueOptions);\r\n  }\r\n\r\n  bruteSolve() {\r\n    const { grid } = this.bruteSolver.solve(this.state.grid);\r\n    this.setState({ grid });\r\n  }\r\n\r\n  checkSolution() {\r\n    let solved = false;\r\n    if (this.isSolutionCorrect.checkGrid(this.state.grid)) {\r\n      console.log(\"Solución correcta!\")\r\n      solved = true;\r\n    } else {\r\n      console.log(\"Esta no es la solución correcta!\")\r\n    }\r\n    this.setState({ solved });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Header /> \r\n        <div className=\"body\">\r\n          <MainWindow\r\n            grid={this.state.grid}\r\n            solved={this.state.solved}\r\n            updateGrid={this.updateGrid}\r\n            newGrid={this.newGrid}\r\n            bruteSolve={this.bruteSolve}\r\n            checkSolution={this.checkSolution}\r\n          />\r\n          {/* <RightBox\r\n            calcOptions={this.calcOptions}\r\n            calcUniqueOptions={this.calcUniqueOptions}\r\n            bruteSolve={this.bruteSolve}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}