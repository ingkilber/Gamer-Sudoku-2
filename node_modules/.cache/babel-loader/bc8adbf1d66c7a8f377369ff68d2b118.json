{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { get_row, get_col, get_square } from '../common/helper_functions';\n\nvar CheckConstraints = /*#__PURE__*/function () {\n  function CheckConstraints() {\n    _classCallCheck(this, CheckConstraints);\n  }\n\n  _createClass(CheckConstraints, [{\n    key: \"element\",\n    value: function element(grid, index) {\n      return this.checkRow(grid, index) && this.checkColumn(grid, index) && this.checkSquare(grid, index);\n    }\n  }, {\n    key: \"checkRow\",\n    value: function checkRow(grid, index) {\n      var rowIndex = Math.floor(index / 9);\n      var row = get_row(grid, rowIndex);\n\n      if (this.hasDuplicates(row)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkColumn\",\n    value: function checkColumn(grid, index) {\n      var columnIndex = index % 9;\n      var column = get_col(grid, columnIndex);\n\n      if (this.hasDuplicates(column)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkSquare\",\n    value: function checkSquare(grid, index) {\n      var squareIndex = Math.floor(Math.floor(index / 9) / 3) * 3 + Math.floor(index % 9 / 3);\n      var square = get_square(grid, squareIndex);\n\n      if (this.hasDuplicates(square)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasDuplicates\",\n    value: function hasDuplicates(numbers) {\n      var counts = [];\n\n      for (var i = 0; i <= numbers.length; i++) {\n        if (counts[numbers[i]] === undefined) {\n          counts[numbers[i]] = 1;\n        } else if (numbers[i] !== \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return CheckConstraints;\n}();\n\nexport default CheckConstraints;","map":{"version":3,"sources":["C:/Users/alons/OneDrive/Documentos/Todos los proyectos descargados/react-sudoku-master/src/components/CheckConstraints.js"],"names":["get_row","get_col","get_square","CheckConstraints","grid","index","checkRow","checkColumn","checkSquare","rowIndex","Math","floor","row","hasDuplicates","columnIndex","column","squareIndex","square","numbers","counts","i","length","undefined"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,QAA6C,4BAA7C;;IAEMC,gB;;;;;;;WACF,iBAAQC,IAAR,EAAcC,KAAd,EAAqB;AACjB,aAAO,KAAKC,QAAL,CAAcF,IAAd,EAAoBC,KAApB,KAA8B,KAAKE,WAAL,CAAiBH,IAAjB,EAAuBC,KAAvB,CAA9B,IAA+D,KAAKG,WAAL,CAAiBJ,IAAjB,EAAuBC,KAAvB,CAAtE;AACH;;;WAED,kBAASD,IAAT,EAAeC,KAAf,EAAsB;AAClB,UAAII,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,CAAnB,CAAf;AACA,UAAIO,GAAG,GAAGZ,OAAO,CAACI,IAAD,EAAOK,QAAP,CAAjB;;AACA,UAAI,KAAKI,aAAL,CAAmBD,GAAnB,CAAJ,EAA6B;AAAE,eAAO,KAAP;AAAc;;AAC7C,aAAO,IAAP;AACH;;;WAED,qBAAYR,IAAZ,EAAkBC,KAAlB,EAAyB;AACrB,UAAIS,WAAW,GAAGT,KAAK,GAAG,CAA1B;AACA,UAAIU,MAAM,GAAGd,OAAO,CAACG,IAAD,EAAOU,WAAP,CAApB;;AACA,UAAI,KAAKD,aAAL,CAAmBE,MAAnB,CAAJ,EAAgC;AAAE,eAAO,KAAP;AAAc;;AAChD,aAAO,IAAP;AACH;;;WAED,qBAAYX,IAAZ,EAAkBC,KAAlB,EAAyB;AACrB,UAAIW,WAAW,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,CAAnB,IAAwB,CAAnC,IAAwC,CAAxC,GAA4CK,IAAI,CAACC,KAAL,CAAYN,KAAK,GAAG,CAAT,GAAc,CAAzB,CAA9D;AACA,UAAIY,MAAM,GAAGf,UAAU,CAACE,IAAD,EAAOY,WAAP,CAAvB;;AACA,UAAI,KAAKH,aAAL,CAAmBI,MAAnB,CAAJ,EAAgC;AAAE,eAAO,KAAP;AAAc;;AAChD,aAAO,IAAP;AACH;;;WAED,uBAAcC,OAAd,EAAuB;AACnB,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAGD,MAAM,CAACD,OAAO,CAACE,CAAD,CAAR,CAAN,KAAuBE,SAA1B,EAAqC;AACjCH,UAAAA,MAAM,CAACD,OAAO,CAACE,CAAD,CAAR,CAAN,GAAqB,CAArB;AACH,SAFD,MAEO,IAAIF,OAAO,CAACE,CAAD,CAAP,KAAe,EAAnB,EAAuB;AAC1B,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH;;;;;;AAGL,eAAejB,gBAAf","sourcesContent":["import { get_row, get_col, get_square } from '../common/helper_functions';\n\nclass CheckConstraints {\n    element(grid, index) {\n        return this.checkRow(grid, index) && this.checkColumn(grid, index) && this.checkSquare(grid, index) \n    }\n\n    checkRow(grid, index) {\n        let rowIndex = Math.floor(index / 9);\n        let row = get_row(grid, rowIndex);\n        if (this.hasDuplicates(row)) { return false }\n        return true;\n    }\n\n    checkColumn(grid, index) {\n        let columnIndex = index % 9;\n        let column = get_col(grid, columnIndex);\n        if (this.hasDuplicates(column)) { return false }\n        return true;\n    }\n    \n    checkSquare(grid, index) {\n        let squareIndex = Math.floor(Math.floor(index / 9) / 3) * 3 + Math.floor((index % 9) / 3);\n        let square = get_square(grid, squareIndex)\n        if (this.hasDuplicates(square)) { return false }\n        return true;\n    }\n    \n    hasDuplicates(numbers) {\n        var counts = [];\n        for(var i = 0; i <= numbers.length; i++) {\n            if(counts[numbers[i]] === undefined) {\n                counts[numbers[i]] = 1;\n            } else if (numbers[i] !== \"\") {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport default CheckConstraints"]},"metadata":{},"sourceType":"module"}