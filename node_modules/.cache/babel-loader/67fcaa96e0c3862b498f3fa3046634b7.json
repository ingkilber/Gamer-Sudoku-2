{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\alons\\\\OneDrive\\\\Documentos\\\\Todos los proyectos descargados\\\\react-sudoku-master\\\\src\\\\components\\\\SudokuGrid.js\";\nimport React, { Component } from 'react';\n\nvar SudokuGrid = /*#__PURE__*/function (_Component) {\n  _inherits(SudokuGrid, _Component);\n\n  var _super = _createSuper(SudokuGrid);\n\n  function SudokuGrid() {\n    var _this;\n\n    _classCallCheck(this, SudokuGrid);\n\n    _this = _super.call(this);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  } //updates grid when user inputs value\n\n\n  _createClass(SudokuGrid, [{\n    key: \"handleChange\",\n    value: function handleChange(e, row, col) {\n      e.preventDefault();\n      console.log(e.target.value);\n      var vert = row;\n      var horiz = col;\n      var validChar = /^$|[1-9]/;\n\n      if (validChar.test(e.target.value)) {\n        this.props.updateGrid(vert, horiz, e.target.value);\n      }\n\n      ;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.newGrid('grid_01');\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(e) {\n      e.target.select();\n    }\n  }, {\n    key: \"col\",\n    value: function col(row, grid) {\n      var _this2 = this;\n\n      return _toConsumableArray(Array(9).keys()).map(function (col) {\n        return /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"box\",\n          maxLength: \"1\",\n          onClick: _this2.clickHandler,\n          key: \"col-\".concat(col),\n          value: grid[row * 9 + col],\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, row, col);\n          },\n          style: {\n            color: _this2.props.solved ? \"Green\" : \"\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var grid = this.props.grid;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sudokuBoxContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sudokuBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, _toConsumableArray(Array(9).keys()).map(function (row) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          key: \"row-\".concat(row),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, _this3.col(row, grid));\n      })));\n    }\n  }]);\n\n  return SudokuGrid;\n}(Component);\n\nexport default SudokuGrid;","map":{"version":3,"sources":["C:/Users/alons/OneDrive/Documentos/Todos los proyectos descargados/react-sudoku-master/src/components/SudokuGrid.js"],"names":["React","Component","SudokuGrid","handleChange","bind","e","row","col","preventDefault","console","log","target","value","vert","horiz","validChar","test","props","updateGrid","newGrid","select","grid","Array","keys","map","clickHandler","color","solved"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAFY;AAGb,G,CAED;;;;;WACA,sBAAaC,CAAb,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxBF,MAAAA,CAAC,CAACG,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,KAArB;AACA,UAAMC,IAAI,GAAGP,GAAb;AACA,UAAMQ,KAAK,GAAGP,GAAd;AAEA,UAAIQ,SAAS,GAAG,UAAhB;;AACA,UAAIA,SAAS,CAACC,IAAV,CAAeX,CAAC,CAACM,MAAF,CAASC,KAAxB,CAAJ,EAAoC;AAClC,aAAKK,KAAL,CAAWC,UAAX,CAAsBL,IAAtB,EAA4BC,KAA5B,EAAmCT,CAAC,CAACM,MAAF,CAASC,KAA5C;AACD;;AAAA;AACF;;;WAED,6BAAoB;AAClB,WAAKK,KAAL,CAAWE,OAAX,CAAmB,SAAnB;AACD;;;WAED,sBAAad,CAAb,EAAgB;AACdA,MAAAA,CAAC,CAACM,MAAF,CAASS,MAAT;AACD;;;WAED,aAAId,GAAJ,EAASe,IAAT,EAAe;AAAA;;AACb,aAAO,mBAAIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAACjB,GAAD;AAAA,4BAC9B;AAAU,UAAA,SAAS,EAAC,KAApB;AAA0B,UAAA,SAAS,EAAC,GAApC;AAAwC,UAAA,OAAO,EAAE,MAAI,CAACkB,YAAtD;AAAoE,UAAA,GAAG,gBAASlB,GAAT,CAAvE;AAAuF,UAAA,KAAK,EAAEc,IAAI,CAACf,GAAG,GAAC,CAAJ,GAAQC,GAAT,CAAlG;AAAiH,UAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,mBAAO,MAAI,CAACF,YAAL,CAAkBE,CAAlB,EAAqBC,GAArB,EAA0BC,GAA1B,CAAP;AAAA,WAA3H;AAAkK,UAAA,KAAK,EAAE;AAAEmB,YAAAA,KAAK,EAAE,MAAI,CAACT,KAAL,CAAWU,MAAX,GAAoB,OAApB,GAA8B;AAAvC,WAAzK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD8B;AAAA,OAAzB,CAAP;AAGD;;;WAED,kBAAS;AAAA;;AACP,UAAQN,IAAR,GAAiB,KAAKJ,KAAtB,CAAQI,IAAR;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,mBAAIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAAClB,GAAD;AAAA,4BACxB;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,gBAASA,GAAT,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAI,CAACC,GAAL,CAASD,GAAT,EAAce,IAAd,CADH,CADwB;AAAA,OAAzB,CADH,CADF,CADF;AAYD;;;;EAhDsBpB,S;;AAmDzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass SudokuGrid extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //updates grid when user inputs value\n  handleChange(e, row, col) {\n    e.preventDefault();\n    console.log(e.target.value);\n    const vert = row;\n    const horiz = col;\n\n    let validChar = /^$|[1-9]/\n    if (validChar.test(e.target.value)) {\n      this.props.updateGrid(vert, horiz, e.target.value);\n    };\n  }\n\n  componentDidMount() {\n    this.props.newGrid('grid_01');\n  }\n\n  clickHandler(e) {\n    e.target.select();\n  }\n\n  col(row, grid) {\n    return [...Array(9).keys()].map((col) => (\n      <textarea className=\"box\" maxLength=\"1\" onClick={this.clickHandler} key={`col-${col}`} value={grid[row*9 + col]} onChange={(e) => this.handleChange(e, row, col)} style={{ color: this.props.solved ? \"Green\" : \"\" }}></textarea>\n    ))\n  }\n\n  render() {\n    const { grid } = this.props;\n\n    return (\n      <div className=\"sudokuBoxContainer\">\n        <div className=\"sudokuBox\">\n          {[...Array(9).keys()].map((row) => (\n            <div className=\"row\" key={`row-${row}`}>\n              {this.col(row, grid)}\n            </div>\n          ))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SudokuGrid;"]},"metadata":{},"sourceType":"module"}